<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="paid premium_maya_journey" enabled="true">
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="paid premium journey_1500 user" enabled="true">
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1500</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">0</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="filename">C:/Users/Maya/Desktop/expert.csv</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames"></stringProp>
        </CSVDataSet>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
        </CookieManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ask question from device" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="question[user_id]" elementType="HTTPArgument" enabled="true">
                <stringProp name="Argument.name">question[user_id]</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="question[body]" elementType="HTTPArgument" enabled="true">
                <stringProp name="Argument.name">question[body]</stringProp>
                <stringProp name="Argument.value">asking question from JMETER</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="question[source]" elementType="HTTPArgument" enabled="true">
                <stringProp name="Argument.name">question[source]</stringProp>
                <stringProp name="Argument.value">app</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="question[type]" elementType="HTTPArgument" enabled="true">
                <stringProp name="Argument.name">question[type]</stringProp>
                <stringProp name="Argument.value">text</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="auth" elementType="HTTPArgument" enabled="true">
                <stringProp name="Argument.name">auth</stringProp>
                <stringProp name="Argument.value">mayaapaappapiv2</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="question[lat]" elementType="HTTPArgument" enabled="true">
                <stringProp name="Argument.name">question[lat]</stringProp>
                <stringProp name="Argument.value">23</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="question[long]" elementType="HTTPArgument" enabled="true">
                <stringProp name="Argument.name">question[long]</stringProp>
                <stringProp name="Argument.value">90</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="question[question_theme_type]" elementType="HTTPArgument" enabled="true">
                <stringProp name="Argument.name">question[question_theme_type]</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="question[question_id]" elementType="HTTPArgument" enabled="true">
                <stringProp name="Argument.name">question[question_id]</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="images" elementType="HTTPArgument" enabled="true">
                <stringProp name="Argument.name">images</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="device_id" elementType="HTTPArgument" enabled="true">
                <stringProp name="Argument.name">device_id</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">loadtest-api-test.maya-apa.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v5/app/store/question</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="ask question" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="ACCESS-TOKEN" elementType="Header">
                <stringProp name="Header.name">ACCESS-TOKEN</stringProp>
                <stringProp name="Header.value">${access-token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="question ID Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">question_id</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">COULD NOT FIND THE QUESTION ID</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
            <stringProp name="ConstantTimer.delay">500</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="lock question to expert" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;question_id&quot; : ${question_id},&#xd;
    &quot;user_id&quot; : &#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">loadtest-devtest.maya-apa.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/testing/lock</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">q_id_lock</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.question_id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">COULD NOT FIND THE QUESTION ID from LOCK  </stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
            <stringProp name="ConstantTimer.delay">650</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="answer by locked expert" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;answer&quot;: {&#xd;
        &quot;featured&quot;: 0,&#xd;
        &quot;question_id&quot;: ${q_id_lock},&#xd;
        &quot;body&quot;: &quot;&lt;p&gt;Answering form  JMETER , SUCESS!!&quot;,&#xd;
        &quot;user_id&quot;: 2345415,&#xd;
        &quot;resolved&quot;: 1,&#xd;
        &quot;tags&quot;: &#xd;
            [&#xd;
                {&#xd;
                    &quot;id&quot;: ,&#xd;
                    &quot;name_en&quot;: &quot;Eye itching/redness/watering &quot;,&#xd;
                    &quot;name_bn&quot;: null,&#xd;
                    &quot;slug&quot;: null,&#xd;
                    &quot;deleted_at&quot;: null,&#xd;
                    &quot;created_at&quot;: &quot;2018-07-29 05:39:41&quot;,&#xd;
                    &quot;updated_at&quot;: &quot;2018-07-29 05:39:47&quot;,&#xd;
                    &quot;type&quot;: &quot;category&quot;,&#xd;
                    &quot;layer_two_id&quot;: 1,&#xd;
                    &quot;comment&quot;: null,&#xd;
                    &quot;tagged&quot;: true&#xd;
                },&#xd;
                {&#xd;
                    &quot;id&quot;: ,&#xd;
                    &quot;name_en&quot;: &quot;Fever&quot;,&#xd;
                    &quot;name_bn&quot;: null,&#xd;
                    &quot;slug&quot;: null,&#xd;
                    &quot;deleted_at&quot;: null,&#xd;
                    &quot;created_at&quot;: &quot;2018-07-29 05:41:56&quot;,&#xd;
                    &quot;updated_at&quot;: &quot;2018-07-29 05:42:00&quot;,&#xd;
                    &quot;type&quot;: &quot;category&quot;,&#xd;
                    &quot;layer_two_id&quot;: 1,&#xd;
                    &quot;comment&quot;: null,&#xd;
                    &quot;tagged&quot;: true&#xd;
                },&#xd;
                {&#xd;
                    &quot;id&quot;: ,&#xd;
                    &quot;name_en&quot;: &quot;Flu&quot;,&#xd;
                    &quot;name_bn&quot;: null,&#xd;
                    &quot;slug&quot;: null,&#xd;
                    &quot;deleted_at&quot;: null,&#xd;
                    &quot;created_at&quot;: &quot;2018-07-29 05:31:51&quot;,&#xd;
                    &quot;updated_at&quot;: &quot;2018-07-29 05:31:59&quot;,&#xd;
                    &quot;type&quot;: &quot;category&quot;,&#xd;
                    &quot;layer_two_id&quot;: 1,&#xd;
                    &quot;comment&quot;: null,&#xd;
                    &quot;tagged&quot;: true&#xd;
                }&#xd;
            ],&#xd;
        &quot;impactCases&quot;: &#xd;
            [&#xd;
                {&#xd;
                    &quot;id&quot;: ,&#xd;
                    &quot;name&quot;: &quot;Saved Life&quot;,&#xd;
                    &quot;desc&quot;: &quot;&quot;,&#xd;
                    &quot;created_at&quot;: &quot;2018-07-17 11:23:59&quot;,&#xd;
                    &quot;updated_at&quot;: &quot;2018-07-17 11:23:59&quot;,&#xd;
                    &quot;selected&quot;: true&#xd;
                },&#xd;
                {&#xd;
                    &quot;id&quot;: ,&#xd;
                    &quot;name&quot;: &quot;Saved from Harm&quot;,&#xd;
                    &quot;desc&quot;: &quot;&quot;,&#xd;
                    &quot;created_at&quot;: &quot;2018-07-17 11:23:59&quot;,&#xd;
                    &quot;updated_at&quot;: &quot;2018-07-17 11:23:59&quot;,&#xd;
                    &quot;selected&quot;: true&#xd;
                }&#xd;
            ]&#xd;
            &#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">loadtest-devtest.maya-apa.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/testing/answers</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="answer" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="Connection" elementType="Header">
                <stringProp name="Header.name">Connection</stringProp>
                <stringProp name="Header.value">keep-alive</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
            <stringProp name="ConstantTimer.delay">700</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">C:\Users\Maya\Desktop\500_user_paid_premuim.csv</stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
